"use strict";(self.webpackChunkblksail_edu_github_io=self.webpackChunkblksail_edu_github_io||[]).push([[8921],{2301:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"module/ros2_in_venv","title":"2.3 Virtual Environments","description":"Virtual Environment Setup","source":"@site/docs/2-module/30_ros2_in_venv.mdx","sourceDirName":"2-module","slug":"/module/ros2_in_venv","permalink":"/docs/module/ros2_in_venv","draft":false,"unlisted":false,"editUrl":"https://github.com/blksail-edu/blksail-edu.github.io/tree/main/docs/2-module/30_ros2_in_venv.mdx","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"slidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"2.2 Terminal Commands","permalink":"/docs/module/terminal_commands"},"next":{"title":"2.4 ArduSub & ROSMAV","permalink":"/docs/module/ros2_with_ardusub"}}');var i=s(4848),r=s(8453);const l={slidebar_position:3},o="2.3 Virtual Environments",a={},c=[{value:"Virtual Environment Setup",id:"virtual-environment-setup",level:2},{value:"Package &amp; Node Setup",id:"package--node-setup",level:3},{value:"Problem Set",id:"problem-set",level:2},{value:"Problem One",id:"problem-one",level:3}];function d(e){const n={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"23-virtual-environments",children:"2.3 Virtual Environments"})}),"\n",(0,i.jsx)(n.h2,{id:"virtual-environment-setup",children:"Virtual Environment Setup"}),"\n",(0,i.jsx)(n.p,{children:"ROS 2 executables can be compiled to run inside of virtual environments if additional changes are made to the package."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Create a new virtual environment called ",(0,i.jsx)(n.code,{children:"tutorials"}),". When you create virtual environments for use with ROS 2, you must include the ",(0,i.jsx)(n.code,{children:"--system-site-packages"})," argument."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-zsh",children:"mkvirtualenv tutorials --system-site-packages\nworkon tutorials\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"--system-site-packages"})," argument gives the virtual environment access to the system site-packages directory, which is essential for accessing system packages."]})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["Install ",(0,i.jsx)(n.code,{children:"numpy"})," in the virtual environment."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-zsh",children:"pip install numpy\n"})}),"\n",(0,i.jsx)(n.h3,{id:"package--node-setup",children:"Package & Node Setup"}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["Create a new package in your ",(0,i.jsx)(n.code,{children:"auvc_ws"})," workspace called ",(0,i.jsx)(n.code,{children:"tutorial_virtualenvs"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-zsh",children:"cd ~/auvc_ws/src && ros2 pkg create tutorial_virtualenvs --build-type ament_python\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"Compiling ROS 2 executables for virtual environments requires that all nodes in the package use the same virtual environment."})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsxs)(n.li,{children:["Within your package, create a new python file called ",(0,i.jsx)(n.code,{children:"virtualenvs.py"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This file will contain a node that imports numpy from the virtual environment. The node will utilize numpy to perform a quick calculation that is logged to the terminal, and then the node will shutdown."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:'\nimport rclpy\nfrom rclpy.node import Node\n\nimport numpy as np\nimport sys\n\n\nclass VirtualEnvironmentsTutorial(Node):\n    """\n    This node demonstrates how ROS 2 packages can be compiled to run executables in a virtual environment.\n    """\n    def __init__(self):\n        super().__init__("tutorial_virtualenvs")\n\n        self.declare_parameter("theta", 3.14159)    # parameter name and default value in radians\n\n        self.theta = self.get_parameter("theta").value\n        self.get_logger().info(sys.executable)\n\n\n    def run(self):\n        """\n        This method logs the sin of the theta parameter using the numpy library to the terminal.\n        """\n        solution = np.sin(self.theta)\n        self.get_logger().info(f"sin({self.theta}) = {solution}")\n\n\ndef main(args=None):\n    rclpy.init(args=args)\n    node = VirtualEnvironmentsTutorial()\n\n    try:\n        node.run()\n    except KeyboardInterrupt:\n        print("\\nKeyboardInterrupt received, shutting down...")\n    finally:\n        node.destroy_node()\n        if rclpy.ok():\n            rclpy.shutdown()\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsxs)(n.li,{children:["Update ",(0,i.jsx)(n.code,{children:"package.xml"})," and ",(0,i.jsx)(n.code,{children:"setup.py"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["In ",(0,i.jsx)(n.code,{children:"package.xml"}),", add the ",(0,i.jsx)(n.code,{children:"rclpy"})," dependency below the license tag."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"<depend>rclpy</depend>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In ",(0,i.jsx)(n.code,{children:"setup.py"}),", add the executable to console_scripts."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:"entry_points={\n    'console_scripts': [\n        'virtualenvs = tutorial_virtualenvs.virtualenvs:main',\n    ],\n},\n"})}),"\n","\n",(0,i.jsxs)(n.ol,{start:"6",children:["\n",(0,i.jsxs)(n.li,{children:["In ",(0,i.jsx)(n.code,{children:"setup.py"}),", add the following import and lines at the top of the file."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:"import os\n\nhome_path = os.path.expanduser(\"~\")\nexecutable_path = os.path.join(home_path, '.virtualenvs', 'tutorials', 'bin', 'python')\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"executable_path"})," variable in this python code represents your system's path to the the virtual environment called ",(0,i.jsx)(n.code,{children:"tutorials"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["In the future, when you create a new virtual environment for a ROS 2 package, you should follow this same procedure and replace ",(0,i.jsx)(n.code,{children:"tutorials"})," with the name of your virtual environment."]})}),"\n",(0,i.jsxs)(n.ol,{start:"7",children:["\n",(0,i.jsxs)(n.li,{children:["In ",(0,i.jsx)(n.code,{children:"setup.py"}),", below the ",(0,i.jsx)(n.code,{children:"entry_points"})," argument, add a new argument called options:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:"options={\n    'build_scripts': {\n        'executable': executable_path,\n    }\n},\n"})}),"\n",(0,i.jsx)(n.p,{children:"This option specifies that the package should build the executables to run in the python located at the executable path; i.e., inside your virtual environment."}),"\n",(0,i.jsxs)(n.ol,{start:"8",children:["\n",(0,i.jsx)(n.li,{children:"Compile your new package, source the workspace, and then test the node."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"To compile the new package, navigate to the workspace directory and run the colcon build command."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-zsh",children:"cd ~/auvc_ws && colcon build --packages-select tutorial_virtualenvs\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Then source the setup.zsh file inside the workspace. ",(0,i.jsxs)(n.em,{children:["Alternatively, you may source the ",(0,i.jsx)(n.code,{children:".zshrc"})," file since it will source the workspace."]})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-zsh",children:"source ~/auvc_ws/install/setup.zsh\n"})}),"\n",(0,i.jsx)(n.p,{children:"Lastly, test your node. Try changing the parameter to different values to see if the node behaves as expected."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-zsh",children:"ros2 run tutorial_virtualenvs virtualenvs --ros-args -p theta:=0.00\n"})}),"\n",(0,i.jsx)(n.h2,{id:"problem-set",children:"Problem Set"}),"\n",(0,i.jsx)(n.p,{children:"In this problem set, you will use a custom service type provided to you."}),"\n",(0,i.jsxs)(n.p,{children:["Clone the package containing the custom service type into your workspace's ",(0,i.jsx)(n.code,{children:"src"})," directory, then compile the package and source the workspace."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-zsh",children:"cd ~/auvc_ws/src && git clone https://github.com/blksail-edu/example_custom_srv\ncd ../ && colcon build --packages-select example_custom_srv\nsource install/setup.zsh\n"})}),"\n",(0,i.jsx)(n.h3,{id:"problem-one",children:"Problem One"}),"\n",(0,i.jsxs)(n.p,{children:["In your ",(0,i.jsx)(n.code,{children:"tutorial_virtualenvs"})," package, create a new node called ",(0,i.jsx)(n.code,{children:"physics_sim.py"}),". This node will simulate the motion of the BlueROV2 in the 2D plane using code from ",(0,i.jsx)(n.strong,{children:"Underwater Physics Problem Ten"}),". This node should meet the following requirements:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Create a service using the ",(0,i.jsx)(n.code,{children:"SimulateAUV2Motion"})," service type."]}),"\n",(0,i.jsxs)(n.li,{children:["Create a callback function for the service named ",(0,i.jsx)(n.code,{children:"run_simulation"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Run your ",(0,i.jsx)(n.code,{children:"simulate_auv2_motion"})," function in the service's callback function."]}),"\n",(0,i.jsxs)(n.li,{children:["Plot the simulated motion and save the plot on the ",(0,i.jsx)(n.code,{children:"backseat"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)(n.p,{children:"In your imports, add the following line:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:"from example_custom_srv.srv import SimulateAUV2Motion\n"})}),(0,i.jsx)(n.p,{children:"Then, in your initializer, create the service using:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:"self.srv = self.create_service(\n    SimulateAUV2Motion,    # service type\n    'run_auv2_motion_simulation',    # service name\n    self.run_simulation    # callback method for service\n)\n\n"})}),(0,i.jsx)(n.p,{children:"Your callback function for a service takes two inputs, a request and a response:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:"def run_simulation(self, request, response):\n    try:\n        # REPLACE WITH YOUR CODE\n        #\n        #\n\n        response.success = True\n    except:\n        response.success = False\n\n    return response\n"})}),(0,i.jsxs)(n.p,{children:["Inside the callback funtion, use the request to obtain the inputs for your ",(0,i.jsx)(n.code,{children:"simulate_auv2_motion"})," function (similarly to how you obtain data from a ROS 2 msg)."]})]}),"\n",(0,i.jsx)(n.p,{children:"Test your node with the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-zsh",children:"ros2 service call 'run_auv2_motion_simulation' example_custom_srv/srv/SimulateAUV2Motion \"{}\"\n"})}),"\n",(0,i.jsx)(n.admonition,{title:"check-off",type:"warning",children:(0,i.jsx)(n.p,{children:"Review with a TA or instructor to check-off before moving on."})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var t=s(6540);const i={},r=t.createContext(i);function l(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);