"use strict";(self.webpackChunkblksail_edu_github_io=self.webpackChunkblksail_edu_github_io||[]).push([[7464],{3041:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>l,toc:()=>h});var r=s(4848),i=s(8453),t=s(9489),o=s(7227);const c={slidebar_position:1},a="Introduction to ROS2",l={id:"module/intro_to_ros",title:"Introduction to ROS2",description:"<iframe",source:"@site/versioned_docs/version-2024/2-module/10_intro_to_ros.mdx",sourceDirName:"2-module",slug:"/module/intro_to_ros",permalink:"/docs/2024/module/intro_to_ros",draft:!1,unlisted:!1,editUrl:"https://github.com/blksail-edu/blksail-edu.github.io/tree/main/versioned_docs/version-2024/2-module/10_intro_to_ros.mdx",tags:[],version:"2024",sidebarPosition:10,frontMatter:{slidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Module 2 - ROS2",permalink:"/docs/2024/category/module-2---ros2"},next:{title:"ROS2 Terminal Commands",permalink:"/docs/2024/module/ros2_terminal_commands"}},d={},h=[{value:"The ROS2 Graph",id:"the-ros2-graph",level:2},{value:"Nodes",id:"nodes",level:3},{value:"Topics",id:"topics",level:3},{value:"Messages",id:"messages",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Services",id:"services",level:3},{value:"Actions",id:"actions",level:3},{value:"Creating a ROS2 Workspace",id:"creating-a-ros2-workspace",level:2},{value:"Creating ROS2 Packages",id:"creating-ros2-packages",level:2},{value:"Publisher/Subscriber Example",id:"publishersubscriber-example",level:2},{value:"Publisher Node",id:"publisher-node",level:3},{value:"Subscriber Node",id:"subscriber-node",level:3},{value:"Updating package.xml",id:"updating-packagexml",level:3},{value:"Updating setup.py",id:"updating-setuppy",level:3},{value:"Build the Package",id:"build-the-package",level:3},{value:"Testing the Publisher Node",id:"testing-the-publisher-node",level:3},{value:"Testing the Subscriber Node",id:"testing-the-subscriber-node",level:3},{value:"Testing the Publisher/Subscriber Pair",id:"testing-the-publishersubscriber-pair",level:3},{value:"Problem Set",id:"problem-set",level:2},{value:"Problem Set Setup",id:"problem-set-setup",level:3},{value:"Installing ArduSub",id:"installing-ardusub",level:4},{value:"Configuring MAVROS",id:"configuring-mavros",level:4},{value:"Launching ArduSub",id:"launching-ardusub",level:4},{value:"Launching MAVROS",id:"launching-mavros",level:4},{value:"Getting Your Computer&#39;s IP",id:"getting-your-computers-ip",level:4},{value:"Problem One",id:"problem-one",level:3},{value:"Problem Two",id:"problem-two",level:3},{value:"Problem Three",id:"problem-three",level:3}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"introduction-to-ros2",children:"Introduction to ROS2"}),"\n",(0,r.jsx)("iframe",{src:"https://blksail-edu.github.io/slides/2024_intro_to_ros",width:"100%",height:320,frameborder:"0",allowfullscreen:!0}),"\n",(0,r.jsx)(n.p,{children:"Robot Operating System 2 aka ROS2 is a set of open-source libraries and tools used to build robot applications."}),"\n",(0,r.jsx)(n.h2,{id:"the-ros2-graph",children:"The ROS2 Graph"}),"\n",(0,r.jsx)(n.p,{children:"The ROS2 Graph describes the general terminology and structure of ROS2 at the user-level. The ROS2 graph consists of:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Nodes"}),"\n",(0,r.jsx)(n.li,{children:"Topics"}),"\n",(0,r.jsx)(n.li,{children:"Messages"}),"\n",(0,r.jsx)(n.li,{children:"Parameters"}),"\n",(0,r.jsx)(n.li,{children:"Services"}),"\n",(0,r.jsx)(n.li,{children:"Actions"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"nodes",children:"Nodes"}),"\n",(0,r.jsx)(n.p,{children:"Nodes are instances of executables that act as individual computation entitites in the ROS2 environment. They perform specific tasks, such as processing sensor data or controlling hardware. Nodes communicate with each other by publishing and subscribing to topics or by using services. Nodes typically consist of combinations of publishers, subscribers, and services. Nodes may also communicate using services, actions, and parameters."}),"\n",(0,r.jsx)(n.h3,{id:"topics",children:"Topics"}),"\n",(0,r.jsx)(n.p,{children:"Topics are named buses that nodes use to exchange messages. Nodes can both publish messages on a topic and receive messages in a callback function on a subscribed topic. Each topic is limited to an individual message type specified in a node's executable."}),"\n",(0,r.jsx)(n.h3,{id:"messages",children:"Messages"}),"\n",(0,r.jsx)(n.p,{children:"Messages are data structures used to communicate information betyouen nodes via topics. These structures contain combinations of fields and data types, and are defined in .msg files. The field is the name of specific data in the structure, while the data type is typically either a primitive data type or another message type. Messages define specific information such as sensor data or control input."}),"\n",(0,r.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(n.p,{children:"Parmaeters are configuration values assigned to nodes. Parameters can either be node-specific or applied to multiple nodes in the ROS2 environment."}),"\n",(0,r.jsx)(n.h3,{id:"services",children:"Services"}),"\n",(0,r.jsx)(n.p,{children:"Services provide an alternate communication method with a request-response mechanism. A client sends requests to a server and receives responses after the sevice is complete."}),"\n",(0,r.jsx)(n.h3,{id:"actions",children:"Actions"}),"\n",(0,r.jsx)(n.p,{children:"Actions are another communication alternative intended for long-running tasks. Actions consist of three elements: a goal, status updates, and a result."}),"\n",(0,r.jsx)(n.h2,{id:"creating-a-ros2-workspace",children:"Creating a ROS2 Workspace"}),"\n",(0,r.jsx)(n.p,{children:"For ROS2 packages to be accessible to the system, the ROS2 installation and workspaces must be source. The ROS2 installation contains all default packages and supporting software. ROS2 workspaces are user-defined locations that contain packages, nodes, etc."}),"\n",(0,r.jsxs)(n.p,{children:["Configure the ",(0,r.jsx)(n.code,{children:".zshrc"})," file to source the ROS2 installation. In a terminal on the ",(0,r.jsx)(n.code,{children:"backseat"}),", enter the following command:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:'echo "source /opt/ros/jazzy/setup.zsh" >> ~/.zshrc\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Before, the ",(0,r.jsx)(n.code,{children:".zshrc"})," file was edited by opening the file and then copying/pasting new lines. The above command adds ",(0,r.jsx)(n.code,{children:"source /opt/ros/jazzy/setup.zsh"})," as a new line at the end of the ",(0,r.jsx)(n.code,{children:".zshrc"})," file. Resource the ",(0,r.jsx)(n.code,{children:".zshrc"})," file to apply the changes:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"source ~/.zshrc\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now, create a ROS2 workspace for this course:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"cd && mkdir auvc_ws && cd auvc_ws && mkdir src\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This ROS2 workspace is called ",(0,r.jsx)(n.code,{children:"auvc_ws"})," and is located at the home directory. It contains an empty ",(0,r.jsx)(n.code,{children:"src"})," directory for initialization. In the future, all your custom packages must be located in ",(0,r.jsx)(n.code,{children:"src"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Compile the empty workspace:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"cd ~/auvc_ws && colcon build\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ROS2 workspace now contains directories named ",(0,r.jsx)(n.code,{children:"build"}),", ",(0,r.jsx)(n.code,{children:"install"}),", ",(0,r.jsx)(n.code,{children:"logs"}),", ",(0,r.jsx)(n.code,{children:"src"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"build"})," directory is used during compiling to build executables from packages in ",(0,r.jsx)(n.code,{children:"src"}),". The ",(0,r.jsx)(n.code,{children:"install"})," directory contains the final results from ",(0,r.jsx)(n.code,{children:"build"}),". The ",(0,r.jsx)(n.code,{children:"logs"})," directory contains log data about the workspace."]}),"\n",(0,r.jsxs)(n.p,{children:["Configure the ",(0,r.jsx)(n.code,{children:".zshrc"})," file to source the ",(0,r.jsx)(n.code,{children:"auvc_ws"})," workspace:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:'echo "source $HOME/auvc_ws/install/setup.zsh" >> ~/.zshrc\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Resource the ",(0,r.jsx)(n.code,{children:".zshrc"})," file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"source ~/.zshrc\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Now all installation files and packages within your ",(0,r.jsx)(n.code,{children:"auvc_ws"})," workspace will be sourced in each new terminal. When you compile new packages or recompile existing packages, you should resource the workspace with ",(0,r.jsx)(n.code,{children:"source ~/auvc_ws/install/setup.zsh"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"creating-ros2-packages",children:"Creating ROS2 Packages"}),"\n",(0,r.jsxs)(n.p,{children:["Create a new ROS2 package called ",(0,r.jsx)(n.code,{children:"intro_to_ros"})," for this lesson. First, navigate to ",(0,r.jsx)(n.code,{children:"~/auvc_ws/src"})," then use ",(0,r.jsx)(n.code,{children:"ros2 pkg create"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"cd ~/auvc_ws/src\nros2 pkg create --build-type ament_python intro_to_ros\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now, open the ROS2 package in Code:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"code ~/auvc_ws/src/intro_to_ros\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Since you created the package on the ",(0,r.jsx)(n.code,{children:"backseat"}),", it is not currently backed up on GitHub. Go to ",(0,r.jsx)(n.a,{href:"https://github.com",children:"https://github.com"})," on your laptop and create an empty repository called ",(0,r.jsx)(n.code,{children:"intro_to_ros"}),". This repository will store all files for your ",(0,r.jsx)(n.code,{children:"intro_to_ros"})," package. Now sync your package on ",(0,r.jsx)(n.code,{children:"backseat"})," to your Git repository."]}),"\n",(0,r.jsxs)(n.p,{children:["Now, on the ",(0,r.jsx)(n.code,{children:"backseat"}),", initialize the Git repository:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"cd ~/auvc_ws/src/intro_to_ros\ngit init\n"})}),"\n",(0,r.jsx)(n.p,{children:"Add the remote repository:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"git remote add origin https://github.com/YOUR_GITHUB_USERNAME/intro_to_ros.git\n"})}),"\n",(0,r.jsx)(n.p,{children:"Add your files and commit:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:'git add .\ngit commit -m "initial commit"\ngit branch -M main\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Now, to publish your branch and push your initial commit, go to the ",(0,r.jsx)(n.code,{children:"Source Control"})," tab and click ",(0,r.jsx)(n.code,{children:"Publish Branch"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"publishersubscriber-example",children:"Publisher/Subscriber Example"}),"\n",(0,r.jsx)(n.p,{children:"This section contains a ROS2 tutorial for writing publisher and subscriber nodes that communicate."}),"\n",(0,r.jsxs)(n.p,{children:["Each of these nodes has a specific purpose: the publisher node publishes ",(0,r.jsx)(n.code,{children:"Vector3"})," message with random values at a frequency of ",(0,r.jsx)(n.code,{children:"1 Hz"}),", while the subscriber node receives those ",(0,r.jsx)(n.code,{children:"Vector3"})," message and prints the corresponding unit vector. This example differs from one in the presentation and is a better example of inter-node communication using topics and messages."]}),"\n",(0,r.jsx)(n.h3,{id:"publisher-node",children:"Publisher Node"}),"\n",(0,r.jsxs)(n.p,{children:["Create a new file in ",(0,r.jsx)(n.code,{children:"intro_to_ros/intro_to_ros/"})," called ",(0,r.jsx)(n.code,{children:"publisher.py"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Add the shebang to the first line of the file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:"#!/usr/bin/env python3\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Next, specify the imports. In all nodes, ",(0,r.jsx)(n.code,{children:"import rclpy"})," and ",(0,r.jsx)(n.code,{children:"from rclpy.node import Node"})," are required to properly use the ROS2 Python3 client library. For this specific node, since you're using ",(0,r.jsx)(n.code,{children:"Vector3"})," from the ",(0,r.jsx)(n.code,{children:"geometry_msgs"})," package, you must import it as well. Other libraries like ",(0,r.jsx)(n.code,{children:"numpy"})," or ",(0,r.jsx)(n.code,{children:"opencv2"})," can be imported as needed."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:"import rclpy\nfrom rclpy.node import Node\nfrom geometry_msgs.msg import Vector3\n\nimport random\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Now, create a class for the node which inherits from ",(0,r.jsx)(n.code,{children:"Node"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:"class TutorialPublisher(Node):\n"})}),"\n",(0,r.jsx)(n.p,{children:"Within the class's constructor, you start the node and define attributes relating to ROS2 communication."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:'    def __init__(self):\n        super().__init__("tutorial_publisher")\n        self.publisher = self.create_publisher(\n            Vector3,\n            "/tutorial/vector3",\n            10\n        )\n        self.publisher_timer = self.create_timer(\n            1.0, self.run_node\n        )\n        self.get_logger().info("starting publisher node")\n'})}),"\n",(0,r.jsx)(n.p,{children:"This constuctor does four things:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Start a node named ",(0,r.jsx)(n.code,{children:"tutorial_publisher"})," in an instance of the ",(0,r.jsx)(n.code,{children:"TutorialPublisher"})," class."]}),"\n",(0,r.jsxs)(n.li,{children:["Create a publisher that broadcasts ",(0,r.jsx)(n.code,{children:"Vector3"})," messages to the topic named ",(0,r.jsx)(n.code,{children:"/tutorial/vector3"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Create a timer that runs the ",(0,r.jsx)(n.code,{children:"run_node"})," method every ",(0,r.jsx)(n.code,{children:"1.0"})," seconds."]}),"\n",(0,r.jsx)(n.li,{children:"Log that the node is starting in the terminal."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["For this tutorial, the ",(0,r.jsx)(n.code,{children:"run_node"})," method will publish random ",(0,r.jsx)(n.code,{children:"Vector3"})," messages."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:'    def run_node(self):\n        msg = Vector3()\n        msg.x = random.uniform(-10.0, 10.0)\n        msg.y = random.uniform(-10.0, 10.0)\n        msg.z = random.uniform(-10.0, 10.0)\n        self.publisher.publish(msg)\n        self.get_logger().info(f"Vector3\\n\\tx: {msg.x}\\ty: {msg.y}\\tz: {msg.z}")\n'})}),"\n",(0,r.jsxs)(n.p,{children:["This method, when called, will generate a ",(0,r.jsx)(n.code,{children:"Vector3"})," message with pseudo random values."]}),"\n",(0,r.jsxs)(n.p,{children:["Lastly, define the ",(0,r.jsx)(n.code,{children:"main"})," function. ",(0,r.jsx)(n.code,{children:"rclpy.init"})," starts the ROS2 Python3 client, ",(0,r.jsx)(n.code,{children:"node"})," creates an instance of the ",(0,r.jsx)(n.code,{children:"TutorialPublisher"})," class, ",(0,r.jsx)(n.code,{children:"rclpy.spin"})," keeps ",(0,r.jsx)(n.code,{children:"node"})," running until there is an exception, ",(0,r.jsx)(n.code,{children:"destroy_node"})," destroys ",(0,r.jsx)(n.code,{children:"node"})," at the end of the program's lifespan, and ",(0,r.jsx)(n.code,{children:"rclpy.shutdown"})," closes the ROS2 Python3 client if it is still active."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:'def main(args=None):\n    rclpy.init(args=args)\n    node = TutorialPublisher()\n\n    try:\n        rclpy.spin(node)\n    except KeyboardInterrupt:\n        print("\\nKeyboardInterrupt received, shutting down...")\n    finally:\n        node.destroy_node()\n        if rclpy.ok():\n            rclpy.shutdown()\n\nif __name__=="__main__":\n    main()\n'})}),"\n",(0,r.jsx)(n.h3,{id:"subscriber-node",children:"Subscriber Node"}),"\n",(0,r.jsxs)(n.p,{children:["Create a new file in ",(0,r.jsx)(n.code,{children:"intro_to_ros/intro_to_ros/"})," called ",(0,r.jsx)(n.code,{children:"subscriber.py"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Add the shebang and imports:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:"#!/usr/bin/env python3\n\nimport rclpy\nfrom rclpy.node import Node\nfrom geometry_msgs.msg import Vector3\n\nimport numpy as np\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Now, create a class for the node which inherits from ",(0,r.jsx)(n.code,{children:"Node"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:"class TutorialSubscriber(Node):\n"})}),"\n",(0,r.jsx)(n.p,{children:"Within the class's constructor, you start the node and define attributes relating to ROS2 communication."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:'    def __init__(self):\n        super().__init__("tutorial_subscriber")\n        self.subscriber = self.create_subscription(\n            Vector3,\n            "/tutorial/vector3",\n            self.callback,\n            10\n        )\n        self.subscriber\n        self.get_logger().info("starting subscriber node")\n'})}),"\n",(0,r.jsx)(n.p,{children:"This constuctor does three things:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Start a node named ",(0,r.jsx)(n.code,{children:"tutorial_subscriber"})," in an instance of the ",(0,r.jsx)(n.code,{children:"TutorialPublisher"})," class."]}),"\n",(0,r.jsxs)(n.li,{children:["Create a subscriber that receives ",(0,r.jsx)(n.code,{children:"Vector3"})," messages on the topic named ",(0,r.jsx)(n.code,{children:"/tutorial/vector3"})," in the method ",(0,r.jsx)(n.code,{children:"self.callback"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Log that the node is starting in the terminal."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["For each subscriber that a node contains, there must be a callback method. Define a callback method for the subscriber attribute called ",(0,r.jsx)(n.code,{children:"subscription"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:'    def callback(self, msg):\n        magnitude = np.sqrt(msg.x ** 2 + msg.y ** 2 + msg.z ** 2)\n        data = Vector3()\n        data.x = msg.x / magnitude\n        data.y = msg.y / magnitude\n        data.z = msg.z / magnitude\n        self.get_logger().info(f"Vector3\\n\\tx: {data.x}\\ty: {data.y}\\tz: {data.z}")\n'})}),"\n",(0,r.jsx)(n.p,{children:"Lastly, define the main function:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:'def main(args=None):\n    rclpy.init(args=args)\n    node = TutorialSubscriber()\n\n    try:\n        rclpy.spin(node)\n    except KeyboardInterrupt:\n        print("\\nKeyboardInterrupt received, shutting down...")\n    finally:\n        node.destroy_node()\n        if rclpy.ok():\n            rclpy.shutdown()\n\nif __name__=="__main__":\n    main()\n'})}),"\n",(0,r.jsx)(n.h3,{id:"updating-packagexml",children:"Updating package.xml"}),"\n",(0,r.jsxs)(n.p,{children:["Before building the package, all dependencies for ROS2 packages and system libraries in all nodes in the package must be added to ",(0,r.jsx)(n.code,{children:"package.xml"}),". Below the ",(0,r.jsx)(n.code,{children:"license"})," line, add a ",(0,r.jsx)(n.code,{children:"build_depend"})," tag and ",(0,r.jsx)(n.code,{children:"exec_depend"})," tag for each dependency that is a ROS2 package or a system library."]}),"\n",(0,r.jsxs)(n.p,{children:["For the ",(0,r.jsx)(n.code,{children:"intro_to_ros"})," package, you only use ROS2 packages; ",(0,r.jsx)(n.code,{children:"numpy"})," and ",(0,r.jsx)(n.code,{children:"random"})," are Python3 libraries, so they do not need to be added."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"  <build_depend>rclpy</build_depend>\n  <build_depend>geometry_msgs</build_depend>\n\n  <exec_depend>rclpy</exec_depend>\n  <exec_depend>geometry_msgs</exec_depend>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"updating-setuppy",children:"Updating setup.py"}),"\n",(0,r.jsxs)(n.p,{children:["Before building the package, all executables must have an entry point in ",(0,r.jsx)(n.code,{children:"setup.py"}),". Add the following lines within the square brackets in ",(0,r.jsx)(n.code,{children:"entry_points={'console_scripts': [],}"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:"'publisher = intro_to_ros.publisher:main',\n'subscriber = intro_to_ros.subscriber:main',\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The variable names in this case define the name of the built executable. ",(0,r.jsx)(n.code,{children:"intro_to_ros.publisher.main"})," specifies the package and the name of the executable in the ",(0,r.jsx)(n.code,{children:"src"})," directory."]}),"\n",(0,r.jsx)(n.h3,{id:"build-the-package",children:"Build the Package"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"intro_to_ros"})," is now configured properly to build the ",(0,r.jsx)(n.code,{children:"publisher.py"})," and ",(0,r.jsx)(n.code,{children:"subscriber.py"})," nodes. In a terminal on the ",(0,r.jsx)(n.code,{children:"backseat"}),", build the package:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"cd ~/auvc_ws\ncolcon build --packages-select intro_to_ros --symlink-install\n"})}),"\n",(0,r.jsxs)(n.p,{children:["A warning may appear saying that easy_install is deprecated since the ",(0,r.jsx)(n.code,{children:"--symlink-install"})," argument is specified, but this warning can be ignored."]}),"\n",(0,r.jsx)(n.p,{children:"Since this is a new package, source the workspace's install file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"source ~/auvc_ws/install/setup.zsh\n"})}),"\n",(0,r.jsx)(n.h3,{id:"testing-the-publisher-node",children:"Testing the Publisher Node"}),"\n",(0,r.jsxs)(n.p,{children:["Let's test the publisher node. In a terminal on the ",(0,r.jsx)(n.code,{children:"backseat"}),", start an instance of ",(0,r.jsx)(n.code,{children:"publisher.py"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"ros2 run intro_to_ros publisher\n"})}),"\n",(0,r.jsxs)(n.p,{children:["In the terminal, you should see the x, y, and z components of a pseudo random vector being printed every ",(0,r.jsx)(n.code,{children:"1.0"})," seconds. Shutdown the node using CTRL + C or CMD + C."]}),"\n",(0,r.jsx)(n.h3,{id:"testing-the-subscriber-node",children:"Testing the Subscriber Node"}),"\n",(0,r.jsxs)(n.p,{children:["Now, let's test the subscriber node. In a terminal on the ",(0,r.jsx)(n.code,{children:"backseat"}),", start an instance of ",(0,r.jsx)(n.code,{children:"subscriber.py"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"ros2 run intro_to_ros subscriber\n"})}),"\n",(0,r.jsx)(n.p,{children:"Initially, the node will only log that it is started. Since there are no messages on the topic when only the subscriber node is running, the callback function does not run."}),"\n",(0,r.jsxs)(n.p,{children:["To test the subsriber, publish a single ",(0,r.jsx)(n.code,{children:"Vector"})," message. Open a new terminal on the ",(0,r.jsx)(n.code,{children:"backseat"})," while the subscriber node is running. In that terminal, enter the following command:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"ros2 topic pub /tutorial/vector3 geometry_msgs/Vector3 '{x: 1.0, y: 1.0, z: 1.0}'\n"})}),"\n",(0,r.jsx)(n.p,{children:"Look at the terminal where the subscriber node is running. You should find that the node logged a unit vector with equal components."}),"\n",(0,r.jsx)(n.h3,{id:"testing-the-publishersubscriber-pair",children:"Testing the Publisher/Subscriber Pair"}),"\n",(0,r.jsxs)(n.p,{children:["Now that you have confirmed each node works independently, run an instance of each node in two seperate terminals on the ",(0,r.jsx)(n.code,{children:"backseat"}),"."]}),"\n",(0,r.jsx)(n.admonition,{title:"Check-off",type:"warning",children:(0,r.jsx)(n.p,{children:"Review with a TA or instructor to check-off this section."})}),"\n",(0,r.jsx)(n.h2,{id:"problem-set",children:"Problem Set"}),"\n",(0,r.jsx)(n.h3,{id:"problem-set-setup",children:"Problem Set Setup"}),"\n",(0,r.jsx)(n.h4,{id:"installing-ardusub",children:"Installing ArduSub"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"MAVROS"})," is a ROS2 package that enables communication between flight control softwares like ",(0,r.jsx)(n.code,{children:"ArduSub"})," and the ROS2 environment. For the purposes of this problem set and future simulations, you must install ",(0,r.jsx)(n.code,{children:"ArduSub"}),". When you interface with the ROVs themselves, you'll connect to a ",(0,r.jsx)(n.code,{children:"SITL"})," running onboard and therefore you will not need to run your own."]}),"\n",(0,r.jsxs)(n.p,{children:["Install ",(0,r.jsx)(n.code,{children:"ArduSub"})," from the official Git repository on the ",(0,r.jsx)(n.code,{children:"backseat"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"cd && git clone --recurse-submodules https://github.com/blksail-edu/ardupilot\ncd ~/ardupilot\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Create a new virtual environment for ",(0,r.jsx)(n.code,{children:"ArduSub"})," and install the following dependencies:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"python3 -m pip install empy==3.3.4 pexpect mavproxy future dronecan setuptools\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Also install the ",(0,r.jsx)(n.code,{children:"ccache"})," system library:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"sudo apt-get install ccache\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Now, configure ",(0,r.jsx)(n.code,{children:"ArduPilot"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"./waf configure\n. ~/.profile\n./waf clean\n"})}),"\n",(0,r.jsxs)(n.p,{children:["On the ",(0,r.jsx)(n.code,{children:"backseat"}),", use the following commands in a terminal to add ",(0,r.jsx)(n.code,{children:"ArduPilot"})," to path:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:'echo "export PATH=$PATH:$HOME/ardupilot/Tools/autotest" >> ~/.zshrc\necho "export PATH=/usr/lib/ccache:$PATH" >> ~/.zshrc\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Next, install the ",(0,r.jsx)(n.code,{children:"gcc-arm cross-compiler"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"cd ~/ardupilot && mkdir TARGET_DIR && cd TARGET_DIR\nwget -c https://firmware.ardupilot.org/Tools/STM32-tools/gcc-arm-none-eabi-10-2020-q4-major-x86_64-linux.tar.bz2\n"})}),"\n",(0,r.jsx)(n.p,{children:"Unpack the compiler:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"tar -xjvf gcc-arm-none-eabi-10-2020-q4-major-x86_64-linux.tar.bz2\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Add the compiler to path on the ",(0,r.jsx)(n.code,{children:"backseat"})," using the following terminal command:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:'echo "PATH=$PATH:$HOME/ardupilot/TARGET_DIR/gcc-arm-none-eabi-10-2020-q4-major/bin" >> ~/.zshrc\n'})}),"\n",(0,r.jsx)(n.h4,{id:"configuring-mavros",children:"Configuring MAVROS"}),"\n",(0,r.jsxs)(n.p,{children:["Before you can use ",(0,r.jsx)(n.code,{children:"ArduSub"}),", you must finalize the ",(0,r.jsx)(n.code,{children:"MAVROS"})," installation. We have preinstalled ",(0,r.jsx)(n.code,{children:"MAVORS"})," on your Raspberry Pi, but you must fun the following commands to install an additional library:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"cd && wget https://raw.githubusercontent.com/mavlink/mavros/ros2/mavros/scripts/install_geographiclib_datasets.sh\nchmod +x ./install_geographiclib_datasets.sh\nsudo ./install_geographiclib_datasets.sh\n"})}),"\n",(0,r.jsx)(n.h4,{id:"launching-ardusub",children:"Launching ArduSub"}),"\n",(0,r.jsxs)(n.p,{children:["Now, in a terminal on the ",(0,r.jsx)(n.code,{children:"backseat"}),", start a ",(0,r.jsx)(n.code,{children:"SITL"})," with the following command:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:'~/ardupilot/Tools/autotest/sim_vehicle.py --vehicle=ArduSub --aircraft="bwsibot" -L RATBeach --out=udp:YOUR_COMPUTER_IP:14550\n'})}),"\n",(0,r.jsx)(n.admonition,{title:"Note",type:"note",children:(0,r.jsx)(n.p,{children:"The first time you start the SITL, it may take some time to configure."})}),"\n",(0,r.jsx)(n.h4,{id:"launching-mavros",children:"Launching MAVROS"}),"\n",(0,r.jsxs)(n.p,{children:["Once the ",(0,r.jsx)(n.code,{children:"SITL"})," is running, you can connect to it by launching  ",(0,r.jsx)(n.code,{children:"MAVROS"})," in another terminal on the ",(0,r.jsx)(n.code,{children:"backseat"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"ros2 launch mavros apm.launch fcu_url:=udp://127.0.0.1:14550@14555 gcs_url:=udp://:14550@YOUR_COMPUTER_IP:14550 tgt_system:=1 tgt_component:=1 system_id:=255 component_id:=240\n"})}),"\n",(0,r.jsx)(n.admonition,{title:"Note",type:"note",children:(0,r.jsxs)(n.p,{children:["When you run this command on the ",(0,r.jsx)(n.code,{children:"backseat"}),", ",(0,r.jsx)(n.code,{children:"MAVROS"})," may warn you that RTT is too high for timesync."]})}),"\n",(0,r.jsx)(n.admonition,{title:"Note",type:"note",children:(0,r.jsxs)(n.p,{children:["The above ",(0,r.jsx)(n.code,{children:"ros2 launch"})," command only connects to the SITL running locally on the RPI. You will use different arguments to connect to the BlueROV2 vehicles."]})}),"\n",(0,r.jsx)(n.h4,{id:"getting-your-computers-ip",children:"Getting Your Computer's IP"}),"\n",(0,r.jsx)(n.p,{children:"To get your computer's IP address,"}),"\n",(0,r.jsxs)(t.A,{groupId:"operating-systems",children:[(0,r.jsx)(o.A,{value:"macos",label:"macOS",children:(0,r.jsxs)(n.p,{children:["With the ",(0,r.jsx)(n.code,{children:"backseat"})," connected to your Mac, then go to ",(0,r.jsx)(n.code,{children:"System Settings"})," and select ",(0,r.jsx)(n.code,{children:"Network"}),". Find the RNDIS/Ethernet Gadget. Once that interface has a yellow light, click on it. Use the ",(0,r.jsx)(n.code,{children:"IP address"})," field."]})}),(0,r.jsxs)(o.A,{value:"ubuntu",label:"Windows",children:[(0,r.jsxs)(n.p,{children:["In a ",(0,r.jsx)(n.code,{children:"powershell"})," terminal, run the following command:"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"ipconfig\n"})}),(0,r.jsxs)(n.p,{children:["Use the IP address of the interface with your Raspberry Pi. If you are unsure which interface that is, search ",(0,r.jsx)(n.code,{children:"View Network Connections"})," in Windows and find the interface for\n",(0,r.jsx)(n.code,{children:"USB Ethernet/RNDIS Gadget"}),"."]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"problem-one",children:"Problem One"}),"\n",(0,r.jsxs)(n.p,{children:["With both ",(0,r.jsx)(n.code,{children:"ArduSub"})," and ",(0,r.jsx)(n.code,{children:"MAVROS"})," running on the ",(0,r.jsx)(n.code,{children:"backseat"}),", you can access simulated messages from the BlueROV2 vehicle in the ROS2 environment."]}),"\n",(0,r.jsxs)(n.p,{children:["In your ",(0,r.jsx)(n.code,{children:"intro_to_ros"})," package, create a new node called ",(0,r.jsx)(n.code,{children:"bluerov2_sensors"}),". This node should do the following:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Subscribe to the BlueROV2's battery sensor messages."}),"\n",(0,r.jsx)(n.li,{children:"Subscribe to the BlueROV2's inertial measurement unit (IMU) sensor messages."}),"\n",(0,r.jsx)(n.li,{children:"Have a class attribute for the battery message type."}),"\n",(0,r.jsx)(n.li,{children:"Have a class attribute for the IMU message type."}),"\n",(0,r.jsx)(n.li,{children:"Update the battery attribute to the latest battery sensor message when it is received."}),"\n",(0,r.jsx)(n.li,{children:"Update the IMU attribute to the latest IMU sensor message when it is received."}),"\n",(0,r.jsxs)(n.li,{children:["Create a timer and a corresponding method to check whether the battery has fallen below a safe voltage. If it has, log a message to the terminal. This method should run every ",(0,r.jsx)(n.code,{children:"5.0"})," seconds."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Update ",(0,r.jsx)(n.code,{children:"package.xml"})," and ",(0,r.jsx)(n.code,{children:"setup.py"})," to account for your new node, then rebuild the ",(0,r.jsx)(n.code,{children:"intro_to_ros"})," package."]}),"\n",(0,r.jsx)(n.h3,{id:"problem-two",children:"Problem Two"}),"\n",(0,r.jsxs)(n.p,{children:["Open ",(0,r.jsx)(n.code,{children:"QGroundControl"})," on your Windows or macOs machine. You should see the the ",(0,r.jsx)(n.code,{children:"BlueROV2"})," on the United State's west coast. Modify your ",(0,r.jsx)(n.code,{children:"bluerov2_sensors"})," node so that it prints the battery voltage at each callback, then, run your node."]}),"\n",(0,r.jsxs)(n.p,{children:["In QGroundControl, arm the ROV and change the flight mode to ",(0,r.jsx)(n.code,{children:"GUIDED"}),". Then, click on a point anywhere else in the water and select ",(0,r.jsx)(n.code,{children:"Go to location"}),". After holding down space or dragging the slider, you should see the ROV start moving."]}),"\n",(0,r.jsx)(n.p,{children:"Now check the terminal where your node is running. What do you observe about the battery's voltage?"}),"\n",(0,r.jsx)(n.admonition,{title:"Check-off",type:"warning",children:(0,r.jsx)(n.p,{children:"Review with a TA or instructor to check-off this section."})}),"\n",(0,r.jsx)(n.h3,{id:"problem-three",children:"Problem Three"}),"\n",(0,r.jsx)(n.p,{children:"Create a new node called 'physics_sim'. This node should do the following:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Subscribe to ",(0,r.jsx)(n.a,{href:"https://docs.ros.org/en/noetic/api/geometry_msgs/html/msg/Pose2D.html",children:"Pose2D"})," messages on the topic named ",(0,r.jsx)(n.code,{children:"/physics/"}),"pose2d`."]}),"\n",(0,r.jsxs)(n.li,{children:["Have a method that runs your ",(0,r.jsx)(n.code,{children:"simulate_auv2_motion"})," function from ",(0,r.jsx)(n.code,{children:"Problem 10"})," in ",(0,r.jsx)(n.code,{children:"Underwater Physics"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Have a method called ",(0,r.jsx)(n.code,{children:"posed2d_callback"})," that receives ",(0,r.jsx)(n.code,{children:"Pose2D"})," messages. When you receive, run the ",(0,r.jsx)(n.code,{children:"simulate_auv2_motion"})," using ",(0,r.jsx)(n.code,{children:"x0=msg.x"}),", ",(0,r.jsx)(n.code,{children:"y0=msg.y"}),", and ",(0,r.jsx)(n.code,{children:"theta0=msg.theta"}),". For the remaining inputs, use the following values (not accurate to the BlueROV2):"]}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"T = np.ndarray(shape=(4,), dtype=float, buffer=np.array([2.0, 1.0, 2.0, 1.0]))"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"alpha = np.pi / 4"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"L = 0.3"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"l = 0.2"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"mass = 1.0"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"dt = 0.1"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"t_final = 10.0"})}),"\n"]}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsxs)(n.li,{children:["Save the plots as .png file(s) on the ",(0,r.jsx)(n.code,{children:"backseat"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Add any additional attributes or methods as needed. Update ",(0,r.jsx)(n.code,{children:"package.xml"})," and ",(0,r.jsx)(n.code,{children:"setup.py"})," to account for your new node, then rebuild the ",(0,r.jsx)(n.code,{children:"intro_to_ros"})," package."]}),"\n",(0,r.jsxs)(n.p,{children:["For this problem especially, use the ",(0,r.jsx)(n.code,{children:"--symlink-install"})," argument when you build the package. This way, if your node does not work as intended, you do not have to recompile the package when you make changes to ",(0,r.jsx)(n.code,{children:"physics_sim.py"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["With your node running on the ",(0,r.jsx)(n.code,{children:"backseat"}),", open a new terminal and run the following command:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-zsh",children:"ros2 topic pub -1 /physics/pose2d geometry_msgs/Pose2D '{x: 1.0, y: 1.0, theta: 0.5}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},7227:(e,n,s)=>{s.d(n,{A:()=>o});s(6540);var r=s(4164);const i={tabItem:"tabItem_Ymn6"};var t=s(4848);function o(e){let{children:n,hidden:s,className:o}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,o),hidden:s,children:n})}},9489:(e,n,s)=>{s.d(n,{A:()=>_});var r=s(6540),i=s(4164),t=s(4245),o=s(6347),c=s(6494),a=s(2814),l=s(5167),d=s(9900);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:s}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:s,attributes:r,default:i}}=e;return{value:n,label:s,attributes:r,default:i}}))}(s);return function(e){const n=(0,l.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,s])}function p(e){let{value:n,tabValues:s}=e;return s.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:s}=e;const i=(0,o.W6)(),t=function(e){let{queryString:n=!1,groupId:s}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:n,groupId:s});return[(0,a.aZ)(t),(0,r.useCallback)((e=>{if(!t)return;const n=new URLSearchParams(i.location.search);n.set(t,e),i.replace({...i.location,search:n.toString()})}),[t,i])]}function x(e){const{defaultValue:n,queryString:s=!1,groupId:i}=e,t=u(e),[o,a]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:s}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${s.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=s.find((e=>e.default))??s[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:t}))),[l,h]=m({queryString:s,groupId:i}),[x,g]=function(e){let{groupId:n}=e;const s=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,t]=(0,d.Dv)(s);return[i,(0,r.useCallback)((e=>{s&&t.set(e)}),[s,t])]}({groupId:i}),j=(()=>{const e=l??x;return p({value:e,tabValues:t})?e:null})();(0,c.A)((()=>{j&&a(j)}),[j]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);a(e),h(e),g(e)}),[h,g,t]),tabValues:t}}var g=s(1062);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=s(4848);function f(e){let{className:n,block:s,selectedValue:r,selectValue:o,tabValues:c}=e;const a=[],{blockElementScrollPositionUntilNextRender:l}=(0,t.a_)(),d=e=>{const n=e.currentTarget,s=a.indexOf(n),i=c[s].value;i!==r&&(l(n),o(i))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const s=a.indexOf(e.currentTarget)+1;n=a[s]??a[0];break}case"ArrowLeft":{const s=a.indexOf(e.currentTarget)-1;n=a[s]??a[a.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":s},n),children:c.map((e=>{let{value:n,label:s,attributes:t}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>a.push(e),onKeyDown:h,onClick:d,...t,className:(0,i.A)("tabs__item",j.tabItem,t?.className,{"tabs__item--active":r===n}),children:s??n},n)}))})}function y(e){let{lazy:n,children:s,selectedValue:i}=e;const t=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){const e=t.find((e=>e.props.value===i));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:t.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function v(e){const n=x(e);return(0,b.jsxs)("div",{className:(0,i.A)("tabs-container",j.tabList),children:[(0,b.jsx)(f,{...n,...e}),(0,b.jsx)(y,{...n,...e})]})}function _(e){const n=(0,g.A)();return(0,b.jsx)(v,{...e,children:h(e.children)},String(n))}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var r=s(6540);const i={},t=r.createContext(i);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);