"use strict";(self.webpackChunkblksail_edu_github_io=self.webpackChunkblksail_edu_github_io||[]).push([[1681],{4137:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>b});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),u=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(a),d=r,b=c["".concat(i,".").concat(d)]||c[d]||m[d]||o;return a?n.createElement(b,l(l({ref:t},p),{},{components:a})):n.createElement(b,l({ref:t},p))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[c]="string"==typeof e?e:r,l[1]=s;for(var u=2;u<o;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},425:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(7294),r=a(6010);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:a,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,l),hidden:a},t)}},3992:(e,t,a)=>{a.d(t,{Z:()=>w});var n=a(7462),r=a(7294),o=a(6010),l=a(2957),s=a(6550),i=a(5238),u=a(3609),p=a(2560);function c(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function m(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??c(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function d(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:a}=e;const n=(0,s.k6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,i._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})}),[o,n])]}function g(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,o=m(e),[l,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[i,u]=b({queryString:a,groupId:n}),[c,g]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,p.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:n}),h=(()=>{const e=i??c;return d({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{h&&s(h)}),[h]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),g(e)}),[u,g,o]),tabValues:o}}var h=a(1048);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function k(e){let{className:t,block:a,selectedValue:s,selectValue:i,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.o5)(),m=e=>{const t=e.currentTarget,a=p.indexOf(t),n=u[a].value;n!==s&&(c(t),i(n))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const a=p.indexOf(e.currentTarget)+1;t=p[a]??p[0];break}case"ArrowLeft":{const a=p.indexOf(e.currentTarget)-1;t=p[a]??p[p.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>p.push(e),onKeyDown:d,onClick:m},l,{className:(0,o.Z)("tabs__item",f.tabItem,l?.className,{"tabs__item--active":s===t})}),a??t)})))}function y(e){let{lazy:t,children:a,selectedValue:n}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function v(e){const t=g(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",f.tabList)},r.createElement(k,(0,n.Z)({},e,t)),r.createElement(y,(0,n.Z)({},e,t)))}function w(e){const t=(0,h.Z)();return r.createElement(v,(0,n.Z)({key:String(t)},e))}},9650:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>b,frontMatter:()=>s,metadata:()=>u,toc:()=>c});var n=a(7462),r=(a(7294),a(4137)),o=a(3992),l=a(425);a(5944);const s={sidebar_position:1},i="Gazebo",u={unversionedId:"module/gazebo_simulation",id:"module/gazebo_simulation",title:"Gazebo",description:"Gazebo is a set of open source tools for simulating robots in an environment.",source:"@site/docs/3-module/gazebo_simulation.mdx",sourceDirName:"3-module",slug:"/module/gazebo_simulation",permalink:"/docs/module/gazebo_simulation",draft:!1,editUrl:"https://github.com/blksail-edu/blksail-edu.github.io/tree/main/docs/3-module/gazebo_simulation.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Module 3 - Putting it all together",permalink:"/docs/category/module-3---putting-it-all-together"},next:{title:"Troubleshooting",permalink:"/docs/category/troubleshooting"}},p={},c=[{value:"Installation",id:"installation",level:2},{value:"Test the installation",id:"test-the-installation",level:3},{value:"Our custom simulation",id:"our-custom-simulation",level:2},{value:"Controlling the robot",id:"controlling-the-robot",level:2}],m={toc:c},d="wrapper";function b(e){let{components:t,...s}=e;return(0,r.kt)(d,(0,n.Z)({},m,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"gazebo"},"Gazebo"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://gazebosim.org/"},"Gazebo")," is a set of open source tools for simulating robots in an environment.\nIt is commonly used in robotics research and education."),(0,r.kt)("p",null,"We will be using Gazebo to simulate the robot (BlueROV2) in a virtual (pool) environment."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"We will be using Gazebo Garden, the latest version of Gazebo.")),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"The documentation for installing Gazebo can be found ",(0,r.kt)("a",{parentName:"p",href:"https://gazebosim.org/docs/garden/install"},"here"),'.\nSee "',(0,r.kt)("strong",{parentName:"p"},"Binary Installation"),'" for instructions on installing Gazebo on your operating system.\nBelow is a summary of the steps.'),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Only Ubuntu is fully supported by Gazebo.\nmacOS is partially supported.\nIn Windows, the simulation will run, but the GUI will not work.")),(0,r.kt)(o.Z,{groupId:"operating-systems",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"macos",label:"macOS",mdxType:"TabItem"},(0,r.kt)("p",null,"First we need to install ruby from Homebrew:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"brew install ruby\n")),(0,r.kt)("p",null,"Then we have to add the Homebrew Ruby to our path:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"echo 'export PATH=\"$(brew --prefix)/opt/ruby/bin:$PATH\"' >> ~/.zshrc\n")),(0,r.kt)("p",null,"Now, we add the ",(0,r.kt)("inlineCode",{parentName:"p"},"osrf/simulation")," tap:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"brew tap osrf/simulation\n")),(0,r.kt)("admonition",{title:"Apple Silicon-based Macs",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"For Apple Silicon-based Macs, we need to modify the Formulae before installing Gazebo."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd /opt/homebrew/Library/Taps/osrf/homebrew-simulation/Formula\nsed -i '' 's|cmake_args << \"-DCMAKE_INSTALL_RPATH=#{rpath}\"|cmake_args << \"-DCMAKE_INSTALL_RPATH=#{rpath};/opt/homebrew/lib\"|' *.rb\n"))),(0,r.kt)("p",null,"Next we install Gazebo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"brew install gz-garden\n"))),(0,r.kt)(l.Z,{value:"ubuntu",label:"Ubuntu",mdxType:"TabItem"},(0,r.kt)("p",null,"First let's update and install some dependencies:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get update\nsudo apt-get install lsb-release wget gnupg\n")),(0,r.kt)("p",null,"Next we install the Gazebo package repository:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'sudo wget https://packages.osrfoundation.org/gazebo.gpg -O /usr/share/keyrings/pkgs-osrf-archive-keyring.gpg\necho "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/pkgs-osrf-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/gazebo-stable.list > /dev/null\n')),(0,r.kt)("p",null,"Finally, we install Gazebo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get update\nsudo apt-get install gz-garden\n")))),(0,r.kt)("h3",{id:"test-the-installation"},"Test the installation"),(0,r.kt)("p",null,"To test your installation, run the following command:"),(0,r.kt)(o.Z,{groupId:"operating-systems",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"macos",label:"macOS",mdxType:"TabItem"},(0,r.kt)("p",null,"In one terminal, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"gz sim -v4 -s shapes.sdf\n")),(0,r.kt)("p",null,"In another terminal, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"gz sim -v4 -g\n"))),(0,r.kt)(l.Z,{value:"ubuntu",label:"Ubuntu",mdxType:"TabItem"},(0,r.kt)("p",null,"In one terminal, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"gz sim -v4 shapes.sdf\n")))),(0,r.kt)("p",null,"You should see a window pop up with some 3D objects in it."),(0,r.kt)("h2",{id:"our-custom-simulation"},"Our custom simulation"),(0,r.kt)("p",null,"We built a custom simulation for the BlueROV2.\nIt lives in this repository: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/blksail-edu/gazebo_bluerov2"},"gazebo_bluerov2"),"."),(0,r.kt)("p",null,"Clone the repository into your workspace:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/blksail-edu/gazebo_bluerov2\n")),(0,r.kt)("p",null,"Build the simulation:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd gazebo_bluerov2\n./build.sh\n")),(0,r.kt)("p",null,"Start the example simulation:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./launch.sh\n")),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"Sometimes, the simulation will not quit properly.\nIf this happens, you will need to kill the process manually."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pkill -9 gz\n"))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Gazebo BlueROV2",src:a(9392).Z,width:"5120",height:"2880"})),(0,r.kt)("h2",{id:"controlling-the-robot"},"Controlling the robot"),(0,r.kt)("p",null,"Try controlling the depth of robot now with ",(0,r.kt)("inlineCode",{parentName:"p"},"depth_control.py")," you previously wrote."),(0,r.kt)("p",null,"First, in the ",(0,r.kt)("inlineCode",{parentName:"p"},"backseat"),", start the ",(0,r.kt)("inlineCode",{parentName:"p"},"SITL"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd PATH_TO_ARDUSUB\nTools/autotest/sim_vehicle.py -L RATBeach -v ArduSub -f vectored --model=JSON --out=udp:SIMULATION_COMPUTER_IP:14550 --console\n")),(0,r.kt)("p",null,"Run your ",(0,r.kt)("inlineCode",{parentName:"p"},"depth_control.py")," script in another terminal:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"python3 depth_control.py\n")),(0,r.kt)("p",null,"You should see the robot dive to the desired depth."))}b.isMDXComponent=!0},9392:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/gz-sim-9bbbd5471ea53b0e7a19e0d313eaf0bc.png"}}]);