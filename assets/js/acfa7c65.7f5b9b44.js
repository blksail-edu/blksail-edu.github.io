"use strict";(self.webpackChunkblksail_edu_github_io=self.webpackChunkblksail_edu_github_io||[]).push([[6209],{4185:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var i=s(4848),t=s(8453);const r={sidebar_position:6},l="Networking",a={id:"module/networking",title:"Networking",description:"<iframe",source:"@site/versioned_docs/version-2023/0-module/networking.mdx",sourceDirName:"0-module",slug:"/module/networking",permalink:"/docs/2023/module/networking",draft:!1,unlisted:!1,editUrl:"https://github.com/blksail-edu/blksail-edu.github.io/tree/main/versioned_docs/version-2023/0-module/networking.mdx",tags:[],version:"2023",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"C++",permalink:"/docs/2023/module/programming_cpp"},next:{title:"Module 1 - Underwater Robotics",permalink:"/docs/2023/category/module-1---underwater-robotics"}},d={},c=[{value:"OSI Model",id:"osi-model",level:2},{value:"DNS",id:"dns",level:2},{value:"mDNS",id:"mdns",level:3},{value:"Ethernet",id:"ethernet",level:2},{value:"MAC Address",id:"mac-address",level:2},{value:"IP Address",id:"ip-address",level:2},{value:"Ports",id:"ports",level:2},{value:"Sockets",id:"sockets",level:2},{value:"Packets",id:"packets",level:2},{value:"Practice Problems",id:"practice-problems",level:2},{value:"Problem 1: Chat Application",id:"problem-1-chat-application",level:3},{value:"Requirements",id:"requirements",level:4},{value:"Hints",id:"hints",level:4}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"networking",children:"Networking"}),"\n",(0,i.jsx)("iframe",{src:"https://blksail-edu.github.io/slides/networking/",width:"100%",height:320,frameborder:"0",allowfullscreen:!0}),"\n",(0,i.jsx)(n.h2,{id:"osi-model",children:"OSI Model"}),"\n",(0,i.jsx)(n.h2,{id:"dns",children:"DNS"}),"\n",(0,i.jsx)(n.h3,{id:"mdns",children:"mDNS"}),"\n",(0,i.jsx)(n.h2,{id:"ethernet",children:"Ethernet"}),"\n",(0,i.jsx)(n.h2,{id:"mac-address",children:"MAC Address"}),"\n",(0,i.jsx)(n.h2,{id:"ip-address",children:"IP Address"}),"\n",(0,i.jsx)(n.h2,{id:"ports",children:"Ports"}),"\n",(0,i.jsx)(n.h2,{id:"sockets",children:"Sockets"}),"\n",(0,i.jsx)(n.h2,{id:"packets",children:"Packets"}),"\n",(0,i.jsx)(n.h2,{id:"practice-problems",children:"Practice Problems"}),"\n",(0,i.jsx)(n.h3,{id:"problem-1-chat-application",children:"Problem 1: Chat Application"}),"\n",(0,i.jsx)(n.p,{children:"In Python, implement a chat application (server and client) that allows users to send messages in a common chat room."}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsxs)(n.p,{children:["Fork the ",(0,i.jsx)(n.a,{href:"https://github.com/blksail-edu/simple-chat-app",children:"chat application"})," repository and clone it to your local machine."]}),(0,i.jsx)(n.p,{children:"You will be working in a team setup, so make sure to coordinate with your team members.\nOne fork per team.\nEach team member should be working on a separate branch."})]}),"\n",(0,i.jsx)(n.h4,{id:"requirements",children:"Requirements"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The server should be able to handle multiple clients at once."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The server should broadcast messages to all clients."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The server should send a message to the chatroom when a new client joins the chat room."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The server should send a message to the chatroom when a client leaves the chat room."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The client should be able to send messages to the server."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The client should be able to receive messages from the server."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The client should be able to gracefully exit the chat room."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The client should have a username, which is sent to the server when the client joins the chat room."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The server should keep track of all clients in the chat room."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The client is defined by:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"username"}),"\n",(0,i.jsx)(n.li,{children:"IP address"}),"\n",(0,i.jsx)(n.li,{children:"password"}),"\n",(0,i.jsx)(n.li,{children:"unique ID"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The server is defined by:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"IP address"}),"\n",(0,i.jsx)(n.li,{children:"port"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"A message in the chat room is defined by:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"sender (the client ID)"}),"\n",(0,i.jsx)(n.li,{children:"payload (the message)"}),"\n",(0,i.jsx)(n.li,{children:"timestamp"}),"\n",(0,i.jsx)(n.li,{children:"chatroom ID"}),"\n",(0,i.jsx)(n.li,{children:"unique ID"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The chat room is defined by:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"name"}),"\n",(0,i.jsx)(n.li,{children:"unique ID"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"hints",children:"Hints"}),"\n",(0,i.jsx)(n.p,{children:"Here's a class diagram to help you get started:"}),"\n",(0,i.jsx)(n.mermaid,{value:"classDiagram\n  class Client {\n    +String: username\n    +String: ip_address\n    +String: password\n    +String: uuid\n  }\n\n  class Server {\n    +String: ip_address\n    +Number: port\n  }\n\n  class Message {\n    +String: sender\n    +String: payload\n    +Date: timestamp\n    +String: chatroom_id\n    +String: uuid\n  }\n\n  class Chatroom {\n    +String: name\n    +String: uuid\n    +List<Message>: messages\n  }\n"}),"\n",(0,i.jsx)(n.p,{children:"You should at least have the following files:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"chat_server.py"}),"\nThis is the main file that runs the server."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"chat_client.py"}),"\nThis is the main file that runs the client."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"client.py"}),"\nThis is the client class."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"server.py"}),"\nThis is the server class."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"message.py"}),"\nThis is the message class."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"chatroom.py"}),"\nThis is the chatroom class."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Here's a sequence diagram to help you get started:"}),"\n",(0,i.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant C0 as Client 0\n    participant S as Server\n    participant C1 as Client 1\n\n    C0->>S: Authenticate\n    activate S\n    S->>C0: Authenticate OK\n    S->>C0: Broadcast New Client\n    deactivate S\n\n    C0->>S: Send Message\n    activate S\n    S->>C0: Message Received\n    S->>C0: Broadcast Message\n    deactivate S\n\n    C1->>S: Authenticate\n    activate S\n    S->>C1: Authenticate OK\n    S->>C0: Broadcast New Client\n    S->>C1: Broadcast New Client\n    deactivate S\n\n    C1->>S: Send Message\n    activate S\n    S->>C1: Message Received\n    S->>C0: Broadcast Message\n    S->>C1: Broadcast Message\n    deactivate S\n\n    C0->>S: Disconnect\n    activate S\n    S->>C0: Disconnect OK\n    S->>C1: Broadcast Client Disconnected\n    deactivate S\n\n    C1->>S: Disconnect\n    activate S\n    S->>C1: Disconnect OK\n    deactivate S"})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(6540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);