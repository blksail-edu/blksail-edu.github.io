"use strict";(self.webpackChunkblksail_edu_github_io=self.webpackChunkblksail_edu_github_io||[]).push([[874],{4137:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),c=p(n),d=i,m=c["".concat(s,".").concat(d)]||c[d]||h[d]||o;return n?a.createElement(m,l(l({ref:t},u),{},{components:n})):a.createElement(m,l({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=d;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[c]="string"==typeof e?e:i,l[1]=r;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1842:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>p});var a=n(7462),i=(n(7294),n(4137));const o={sidebar_position:4},l="Python",r={unversionedId:"module/programming_python",id:"module/programming_python",title:"Python",description:"Python is an easy to learn, powerful programming language.",source:"@site/docs/0-module/programming_python.mdx",sourceDirName:"0-module",slug:"/module/programming_python",permalink:"/docs/module/programming_python",draft:!1,editUrl:"https://github.com/blksail-edu/blksail-edu.github.io/tree/main/docs/0-module/programming_python.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Raspberry Pi Setup",permalink:"/docs/module/rpi_setup"},next:{title:"C++",permalink:"/docs/module/programming_cpp"}},s={},p=[{value:"Virtual Environments",id:"virtual-environments",level:2},{value:"Install",id:"install",level:3},{value:"Augmenting our <code>.zshrc</code> with <code>virtualenvwrapper</code>",id:"augmenting-our-zshrc-with-virtualenvwrapper",level:3},{value:"Jupyter",id:"jupyter",level:2},{value:"Install",id:"install-1",level:3},{value:"Let&#39;s get started",id:"lets-get-started",level:2},{value:"The starter repository",id:"the-starter-repository",level:3},{value:"<code>requirements.txt</code>",id:"requirementstxt",level:4},{value:"<code>hello.py</code>",id:"hellopy",level:4},{value:"<code>test_hello.py</code>",id:"test_hellopy",level:4},{value:"Running the tests",id:"running-the-tests",level:3},{value:"Implement the functions",id:"implement-the-functions",level:3},{value:"Python Basics",id:"python-basics",level:2},{value:"Variables",id:"variables",level:3},{value:"Data Types",id:"data-types",level:3},{value:"Getting the Data Type",id:"getting-the-data-type",level:4},{value:"Setting the Data Type",id:"setting-the-data-type",level:4},{value:"Setting the Specific Data Type",id:"setting-the-specific-data-type",level:4},{value:"Functions",id:"functions",level:3},{value:"Creating a Function",id:"creating-a-function",level:4},{value:"Calling a Function",id:"calling-a-function",level:4},{value:"Arguments",id:"arguments",level:4},{value:"Parameters or Arguments?",id:"parameters-or-arguments",level:4},{value:"Loops",id:"loops",level:3},{value:"The <code>while</code> Loop",id:"the-while-loop",level:4},{value:"The <code>for</code> Loop",id:"the-for-loop",level:4},{value:"The <code>break</code> Statement",id:"the-break-statement",level:4},{value:"The <code>continue</code> Statement",id:"the-continue-statement",level:4},{value:"Classes and Objects",id:"classes-and-objects",level:3},{value:"Create a Class",id:"create-a-class",level:4},{value:"Create Object",id:"create-object",level:4},{value:"The <code>__init__()</code> Function",id:"the-__init__-function",level:4},{value:"Object Methods",id:"object-methods",level:4},{value:"The <code>self</code> Parameter",id:"the-self-parameter",level:4},{value:"Modify Object Properties",id:"modify-object-properties",level:4},{value:"Python Modules",id:"python-modules",level:2},{value:"Exercise",id:"exercise",level:2},{value:"Exercise 1",id:"exercise-1",level:3}],u={toc:p},c="wrapper";function h(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"python"},"Python"),(0,i.kt)("p",null,"Python is an easy to learn, powerful programming language.\nIt has efficient high-level data structures and a simple but effective approach to object-oriented programming.\nPython\u2019s elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms."),(0,i.kt)("p",null,"Throughout the course, we will use Python to implement the algorithms we learn.\nIt is very useful to have a basic understanding of Python before starting the course."),(0,i.kt)("h2",{id:"virtual-environments"},"Virtual Environments"),(0,i.kt)("p",null,"To avoid conflicts between different Python projects, it is a good idea to use\nvirtual environments. A virtual environment is a directory tree which contains\nPython executable files and other files which indicate that it is a virtual\nenvironment."),(0,i.kt)("h3",{id:"install"},"Install"),(0,i.kt)("p",null,"Let's install the ",(0,i.kt)("inlineCode",{parentName:"p"},"virtualenv")," package and ",(0,i.kt)("inlineCode",{parentName:"p"},"virtualenvwrapper")," extension for\nPython."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pip3 install --user virtualenv virtualenvwrapper\n")),(0,i.kt)("h3",{id:"augmenting-our-zshrc-with-virtualenvwrapper"},"Augmenting our ",(0,i.kt)("inlineCode",{parentName:"h3"},".zshrc")," with ",(0,i.kt)("inlineCode",{parentName:"h3"},"virtualenvwrapper")),(0,i.kt)("p",null,"We will be adding some configuration to the ",(0,i.kt)("inlineCode",{parentName:"p"},".zshrc")," file."),(0,i.kt)("p",null,"Open the ",(0,i.kt)("inlineCode",{parentName:"p"},".zshrc")," file with your favorite text editor and add the following\nlines:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Python\nexport WORKON_HOME=$HOME/.virtualenvs\nexport VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3\nsource virtualenvwrapper.sh\n")),(0,i.kt)("h2",{id:"jupyter"},"Jupyter"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://jupyter.org/"},"Jupyter Notebook")," is an open-source web application that\nallows you to create and share documents that contain live code, equations,\nvisualizations and narrative text."),(0,i.kt)("p",null,"We will be using Jupyter Notebook to write some assignments."),(0,i.kt)("h3",{id:"install-1"},"Install"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pip3 install jupyter\n")),(0,i.kt)("h2",{id:"lets-get-started"},"Let's get started"),(0,i.kt)("p",null,"A starter repository is available at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/blksail-edu/python-refresher"},"blksail-edu/python-refresher"),"."),(0,i.kt)("p",null,"Let's make a fork and start working on the exercises."),(0,i.kt)("p",null,"To fork the repository, click on the fork button on the top right corner of the repository page.\nThis will create a copy of the repository in your GitHub account."),(0,i.kt)("p",null,"Once the repository is forked, you can clone it to your local machine.\nGet the URL of the repository from the address bar of your browser and run the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone <url>\n")),(0,i.kt)("p",null,"Now you can start working on the exercises."),(0,i.kt)("h3",{id:"the-starter-repository"},"The starter repository"),(0,i.kt)("p",null,"The starter repository contains the following files:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u251c\u2500\u2500 hello.py          # The main Python file\n\u251c\u2500\u2500 requirements.txt  # The list of dependencies\n\u2514\u2500\u2500 test_hello.py     # The test file\n")),(0,i.kt)("p",null,"The repository also contains some configuration files located in ",(0,i.kt)("inlineCode",{parentName:"p"},".vscode"),".\nThese files are used by Visual Studio Code to configure the development environment."),(0,i.kt)("p",null,"There are some extensions that are useful for Python development, they are listed in ",(0,i.kt)("inlineCode",{parentName:"p"},".vscode/extensions.json"),".\nWhen you open the ",(0,i.kt)("inlineCode",{parentName:"p"},"Extensions")," tab in Visual Studio Code, you will be prompted to install these extensions."),(0,i.kt)("p",null,"Let's first create a virtual environment for our project.\nWe will be using the ",(0,i.kt)("inlineCode",{parentName:"p"},"virtualenvwrapper")," package to manage our virtual environments."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"mkvirtualenv python-refresher\n")),(0,i.kt)("p",null,"This will create a virtual environment named ",(0,i.kt)("inlineCode",{parentName:"p"},"python-refresher")," and activate it."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"You can deactivate the virtual environment by running the ",(0,i.kt)("inlineCode",{parentName:"p"},"deactivate")," command."),(0,i.kt)("p",{parentName:"admonition"},"At any time you can activate the virtual environment by running the ",(0,i.kt)("inlineCode",{parentName:"p"},"workon python-refresher")," command.")),(0,i.kt)("h4",{id:"requirementstxt"},(0,i.kt)("inlineCode",{parentName:"h4"},"requirements.txt")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"requirements.txt")," file contains a list of dependencies.\nThese are the packages that are required to run the code in the repository."),(0,i.kt)("p",null,"The list is empty for now, but we will be adding some dependencies later."),(0,i.kt)("p",null,"To install the dependencies, run the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pip3 install -r requirements.txt\n")),(0,i.kt)("h4",{id:"hellopy"},(0,i.kt)("inlineCode",{parentName:"h4"},"hello.py")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"hello.py")," file contains a simple Python program that prints ",(0,i.kt)("inlineCode",{parentName:"p"},"Hello, World!")," to the console.\nIt also contains a set of functions that we will be implementing in the exercises."),(0,i.kt)("h4",{id:"test_hellopy"},(0,i.kt)("inlineCode",{parentName:"h4"},"test_hello.py")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"test_hello.py")," file contains a set of tests for the functions in ",(0,i.kt)("inlineCode",{parentName:"p"},"hello.py"),".\nWe will be using these tests to check if our implementations are correct."),(0,i.kt)("h3",{id:"running-the-tests"},"Running the tests"),(0,i.kt)("p",null,"To run the tests, we will use the ",(0,i.kt)("inlineCode",{parentName:"p"},"Testing")," tab in Visual Studio Code.\nThe first time you open the ",(0,i.kt)("inlineCode",{parentName:"p"},"Testing")," tab, you will be prompted to select a test framework.\nSelect ",(0,i.kt)("inlineCode",{parentName:"p"},"unittest")," and click on ",(0,i.kt)("inlineCode",{parentName:"p"},"OK"),"."),(0,i.kt)("p",null,"Now you can run the tests by clicking on the ",(0,i.kt)("inlineCode",{parentName:"p"},"Run All Tests")," button."),(0,i.kt)("p",null,"As you can see, all the tests are failing.\nCan you find out why?"),(0,i.kt)("admonition",{title:"Check-off",type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"Review with a TA or instructor to check-off this section.")),(0,i.kt)("h3",{id:"implement-the-functions"},"Implement the functions"),(0,i.kt)("p",null,"Let's implement the functions in ",(0,i.kt)("inlineCode",{parentName:"p"},"hello.py")," so that the tests pass."),(0,i.kt)("p",null,"First make sure you understand what the functions are supposed to do.\nNext, implement the tests one by one.\nNow, you can implement the functions so that the tests pass."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Every time you make a change to the code, you need to run the tests again to make sure that you didn't break anything.")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Always keep track of your changes by committing them to the repository.")),(0,i.kt)("p",null,"You can see that some functions need ",(0,i.kt)("inlineCode",{parentName:"p"},"numpy")," to work.\nLet's add ",(0,i.kt)("inlineCode",{parentName:"p"},"numpy")," to the list of dependencies in ",(0,i.kt)("inlineCode",{parentName:"p"},"requirements.txt"),".\nNow you can install the new dependencies by running the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pip3 install -r requirements.txt\n")),(0,i.kt)("admonition",{title:"Check-off",type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"Review with a TA or instructor to check-off this section."),(0,i.kt)("p",{parentName:"admonition"},"All functions should be implemented and all tests should pass.\nWrite at least 3 tests for each function."),(0,i.kt)("p",{parentName:"admonition"},"Make sure that you have committed your changes to the repository.")),(0,i.kt)("h2",{id:"python-basics"},"Python Basics"),(0,i.kt)("h3",{id:"variables"},"Variables"),(0,i.kt)("p",null,"Variables are used to store values.\nA variable is created the moment you first assign a value to it."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'x = 5\ny = "John"\nprint(x)\nprint(y)\n')),(0,i.kt)("p",null,"Variables do not need to be declared with any particular type and can even change type after they have been set."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'x = 4       # x is of type int\nx = "Sally" # x is now of type str\nprint(x)\n')),(0,i.kt)("h3",{id:"data-types"},"Data Types"),(0,i.kt)("p",null,"Python has the following data types built-in by default, in these categories:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Text Type: ",(0,i.kt)("inlineCode",{parentName:"li"},"str")),(0,i.kt)("li",{parentName:"ul"},"Numeric Types: ",(0,i.kt)("inlineCode",{parentName:"li"},"int"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"float"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"complex")),(0,i.kt)("li",{parentName:"ul"},"Sequence Types: ",(0,i.kt)("inlineCode",{parentName:"li"},"list"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"tuple"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"range")),(0,i.kt)("li",{parentName:"ul"},"Mapping Type: ",(0,i.kt)("inlineCode",{parentName:"li"},"dict")),(0,i.kt)("li",{parentName:"ul"},"Set Types: ",(0,i.kt)("inlineCode",{parentName:"li"},"set"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"frozenset")),(0,i.kt)("li",{parentName:"ul"},"Boolean Type: ",(0,i.kt)("inlineCode",{parentName:"li"},"bool")),(0,i.kt)("li",{parentName:"ul"},"Binary Types: ",(0,i.kt)("inlineCode",{parentName:"li"},"bytes"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"bytearray"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"memoryview"))),(0,i.kt)("h4",{id:"getting-the-data-type"},"Getting the Data Type"),(0,i.kt)("p",null,"You can get the data type of any object by using the ",(0,i.kt)("inlineCode",{parentName:"p"},"type()")," function:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"x = 5\nprint(type(x))\n")),(0,i.kt)("h4",{id:"setting-the-data-type"},"Setting the Data Type"),(0,i.kt)("p",null,"In Python, the data type is set when you assign a value to a variable:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'x = "Hello World" # str\nx = 20            # int\nx = 20.5          # float\nx = 1j            # complex\nx = ["apple", "banana", "cherry"] # list\nx = ("apple", "banana", "cherry") # tuple\nx = range(6)      # range\nx = {"name" : "John", "age" : 36}  # dict\nx = {"apple", "banana", "cherry"}  # set\nx = frozenset({"apple", "banana", "cherry"}) # frozenset\nx = True          # bool\nx = b"Hello"      # bytes\nx = bytearray(5)  # bytearray\nx = memoryview(bytes(5)) # memoryview\n')),(0,i.kt)("h4",{id:"setting-the-specific-data-type"},"Setting the Specific Data Type"),(0,i.kt)("p",null,"If you want to specify the data type, you can use the following constructor functions:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'x = str("Hello World") # str\nx = int(20)            # int\nx = float(20.5)        # float\nx = complex(1j)        # complex\nx = list(("apple", "banana", "cherry")) # list\nx = tuple(("apple", "banana", "cherry")) # tuple\nx = range(6)           # range\nx = dict(name="John", age=36) # dict\nx = set(("apple", "banana", "cherry")) # set\nx = frozenset(("apple", "banana", "cherry")) # frozenset\nx = bool(5)            # bool\nx = bytes(5)           # bytes\nx = bytearray(5)       # bytearray\nx = memoryview(bytes(5)) # memoryview\n')),(0,i.kt)("h3",{id:"functions"},"Functions"),(0,i.kt)("p",null,"A function is a block of code which only runs when it is called.\nYou can pass data, known as parameters, into a function.\nA function can return data as a result."),(0,i.kt)("h4",{id:"creating-a-function"},"Creating a Function"),(0,i.kt)("p",null,"In Python a function is defined using the ",(0,i.kt)("inlineCode",{parentName:"p"},"def")," keyword:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'def my_function():\n  print("Hello from a function")\n')),(0,i.kt)("h4",{id:"calling-a-function"},"Calling a Function"),(0,i.kt)("p",null,"To call a function, use the function name followed by parenthesis:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'def my_function():\n  print("Hello from a function")\n\nmy_function()\n')),(0,i.kt)("h4",{id:"arguments"},"Arguments"),(0,i.kt)("p",null,"Information can be passed into functions as arguments.\nArguments are specified after the function name, inside the parentheses."),(0,i.kt)("p",null,"You can add as many arguments as you want, just separate them with a comma."),(0,i.kt)("p",null,"The following example has a function with one argument (",(0,i.kt)("inlineCode",{parentName:"p"},"fname"),").\nWhen the function is called, we pass along a first name, which is used inside the function to print the full name:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'def my_function(fname):\n  print(fname + " Refsnes")\n\nmy_function("Emil")\nmy_function("Tobias")\nmy_function("Linus")\n')),(0,i.kt)("h4",{id:"parameters-or-arguments"},"Parameters or Arguments?"),(0,i.kt)("p",null,'The terms "parameter" and "argument" can be used for the same thing: information that are passed into a function.'),(0,i.kt)("p",null,"From a function's perspective:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A parameter is the variable listed inside the parentheses in the function definition."),(0,i.kt)("li",{parentName:"ul"},"An argument is the value that is sent to the function when it is called.")),(0,i.kt)("h3",{id:"loops"},"Loops"),(0,i.kt)("p",null,"Python has two primitive loop commands:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"while")," loops"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"for")," loops")),(0,i.kt)("h4",{id:"the-while-loop"},"The ",(0,i.kt)("inlineCode",{parentName:"h4"},"while")," Loop"),(0,i.kt)("p",null,"With the ",(0,i.kt)("inlineCode",{parentName:"p"},"while")," loop we can execute a set of statements as long as a condition is true."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"i = 1\nwhile i < 6:\n  print(i)\n  i += 1\n")),(0,i.kt)("h4",{id:"the-for-loop"},"The ",(0,i.kt)("inlineCode",{parentName:"h4"},"for")," Loop"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"for")," loop is used for iterating over a sequence (that is either a list, a tuple, a dictionary, a set, or a string)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'fruits = ["apple", "banana", "cherry"]\nfor x in fruits:\n  print(x)\n')),(0,i.kt)("h4",{id:"the-break-statement"},"The ",(0,i.kt)("inlineCode",{parentName:"h4"},"break")," Statement"),(0,i.kt)("p",null,"With the ",(0,i.kt)("inlineCode",{parentName:"p"},"break")," statement we can stop the loop even if the while condition is true:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"i = 1\nwhile i < 6:\n  print(i)\n  if i == 3:\n    break\n  i += 1\n")),(0,i.kt)("h4",{id:"the-continue-statement"},"The ",(0,i.kt)("inlineCode",{parentName:"h4"},"continue")," Statement"),(0,i.kt)("p",null,"With the ",(0,i.kt)("inlineCode",{parentName:"p"},"continue")," statement we can stop the current iteration, and continue with the next:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"i = 0\nwhile i < 6:\n  i += 1\n  if i == 3:\n    continue\n  print(i)\n")),(0,i.kt)("h3",{id:"classes-and-objects"},"Classes and Objects"),(0,i.kt)("p",null,"Python is an object oriented programming language."),(0,i.kt)("p",null,"Almost everything in Python is an object, with its properties and methods."),(0,i.kt)("p",null,'A Class is like an object constructor, or a "blueprint" for creating objects.'),(0,i.kt)("h4",{id:"create-a-class"},"Create a Class"),(0,i.kt)("p",null,"To create a class, use the keyword ",(0,i.kt)("inlineCode",{parentName:"p"},"class"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class MyClass:\n  x = 5\n")),(0,i.kt)("h4",{id:"create-object"},"Create Object"),(0,i.kt)("p",null,"Now we can use the class named ",(0,i.kt)("inlineCode",{parentName:"p"},"MyClass")," to create objects:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class MyClass:\n  x = 5\n\np1 = MyClass()\nprint(p1.x)\n")),(0,i.kt)("h4",{id:"the-__init__-function"},"The ",(0,i.kt)("inlineCode",{parentName:"h4"},"__init__()")," Function"),(0,i.kt)("p",null,"The examples above are classes and objects in their simplest form, and are not really useful in real life applications."),(0,i.kt)("p",null,"To understand the meaning of classes we have to understand the built-in ",(0,i.kt)("inlineCode",{parentName:"p"},"__init__()")," function."),(0,i.kt)("p",null,"All classes have a function called ",(0,i.kt)("inlineCode",{parentName:"p"},"__init__()"),", which is always executed when the class is being initiated."),(0,i.kt)("p",null,"Use the ",(0,i.kt)("inlineCode",{parentName:"p"},"__init__()")," function to assign values to object properties, or other operations that are necessary to do when the object is being created:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'class Person:\n  def __init__(self, name, age):\n    self.name = name\n    self.age = age\n\np1 = Person("John", 36)\n\nprint(p1.name)\nprint(p1.age)\n')),(0,i.kt)("h4",{id:"object-methods"},"Object Methods"),(0,i.kt)("p",null,"Objects can also contain methods. Methods in objects are functions that belong to the object."),(0,i.kt)("p",null,"Let us create a method in the Person class:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'class Person:\n  def __init__(self, name, age):\n    self.name = name\n    self.age = age\n\n  def myfunc(self):\n    print("Hello my name is " + self.name)\n\np1 = Person("John", 36)\np1.myfunc()\n')),(0,i.kt)("h4",{id:"the-self-parameter"},"The ",(0,i.kt)("inlineCode",{parentName:"h4"},"self")," Parameter"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"self")," parameter is a reference to the current instance of the class, and is used to access variables that belong to the class."),(0,i.kt)("p",null,"It does not have to be named ",(0,i.kt)("inlineCode",{parentName:"p"},"self")," , you can call it whatever you like, but it has to be the first parameter of any function in the class:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'class Person:\n  def __init__(mysillyobject, name, age):\n    mysillyobject.name = name\n    mysillyobject.age = age\n\n  def myfunc(abc):\n    print("Hello my name is " + abc.name)\n\np1 = Person("John", 36)\np1.myfunc()\n')),(0,i.kt)("h4",{id:"modify-object-properties"},"Modify Object Properties"),(0,i.kt)("p",null,"You can modify properties on objects like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"p1.age = 40\n")),(0,i.kt)("h2",{id:"python-modules"},"Python Modules"),(0,i.kt)("p",null,"A module is a file containing a set of functions you want to include in your application."),(0,i.kt)("p",null,"For example, ",(0,i.kt)("inlineCode",{parentName:"p"},"numpy")," is a module that we can use to work with arrays:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"import numpy\n\narr = numpy.array([1, 2, 3, 4, 5])\n\nprint(arr)\nprint(type(arr))\n")),(0,i.kt)("h2",{id:"exercise"},"Exercise"),(0,i.kt)("h3",{id:"exercise-1"},"Exercise 1"),(0,i.kt)("p",null,"Create a simulation of a bank account."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The account should have a balance, a name and an account number."),(0,i.kt)("li",{parentName:"ul"},"The account should have a method to withdraw money."),(0,i.kt)("li",{parentName:"ul"},"The account should have a method to deposit money."),(0,i.kt)("li",{parentName:"ul"},"The account should have a method to print the current balance.")))}h.isMDXComponent=!0}}]);